name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - image: quay.io/pypa/manylinux_2_28_x86_64
            target: x86_64-unknown-linux-gnu

    container:
      image: "${{ matrix.platform.image }}"
      env:
        PIP_CACHE_DIR: "/var/cache/pip/"
      # Mount host volumes so we can delete some stuff to free up space
#      volumes:
#        - "/:/host"

    steps:
      #      - name: Maximize build space
      #        run: |
      #          echo "Before storage:"
      #          sudo df -h
      #
      #          echo "::group::Clean"
      #          sudo rm -rf /usr/share/dotnet &
      #          sudo rm -rf /usr/local/lib/android &
      #          sudo rm -rf /opt/ghc &
      #          sudo rm -rf /opt/hostedtoolcache/CodeQL &
      #          sudo docker system prune --force -q &
      #
      #          wait
      #          echo "::endgroup::"
      #
      #          echo "After storage":
      #          sudo df -h

      - uses: actions/checkout@v4

      # Bruh. This needs to be here before any cache
      - name: Install zstd
        run: |
          dnf update --quiet -y
          dnf install --quiet -y zstd

      - name: Setup protoc
        uses: arduino/setup-protoc@v3.0.0

      - name: Setup zig
        uses: goto-bus-stop/setup-zig@v2

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.platform.target }}

      - name: Setup sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_DIRECT=true" >> $GITHUB_ENV
          echo "SCCACHE_DIR=/var/cache/sccache/" >> $GITHUB_ENV

      - name: Cache Sccache
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/sccache/
          key: |
            ${{ runner.os }}-sccache-${{ matrix.platform.target }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-${{ matrix.platform.target }}

      - name: Cache Non-Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/dnf/
            /var/cache/pip/
          key: "${{ runner.os }}-system-${{ matrix.platform.target }}"

      - name: Install DNF dependencies
        run: |
          dnf update --quiet -y
          dnf install --quiet -y perl-core openssl openssl-devel pkgconfig unzip libzstd-devel cmake wget tar openssl-devel
          
      - name: Cache Rust registry
        uses: Swatinem/rust-cache@v2
        with:
          key: "${{ matrix.platform.target }}"
          cache-targets: "false"

      - name: Cache sccache
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/dnf/
            /var/cache/pip/
          key: "${{ runner.os }}-system-${{ matrix.platform.target }}"

      # Requires wget and tar
      - name: Setup mold
        uses: rui314/setup-mold@v1

      - name: Install Maturin
        run: |
          pipx install "maturin[zig,patchelf]"
          
      - name: Setup cargo config
        run: |
          mkdir -p .cargo/
          cp misc/ci-mold-linker.toml .cargo/config.toml

      - name: Build wheels
        run: maturin build \
          --interpreter=3.9 
          --interpreter=3.10 
          --interpreter=3.11
          --interpreter=3.12
          --profile=ci 
          --target=${{ matrix.platform.target }} 
          --out=dist

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform.target }}
          path: dist
          retention-days: 1

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64-apple-darwin
          - runner: macos-14
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.platform.target }}

      - name: Install dependencies
        run: |
          brew install protobuf

      - name: Setup sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_DIRECT=true" >> $GITHUB_ENV
          echo "SCCACHE_DIR=./sccache/" >> $GITHUB_ENV
          
      - name: Cache Sccache
        uses: actions/cache@v4
        with:
          path: |
            ./sccache/
          key: |
            ${{ runner.os }}-sccache-${{ matrix.platform.target }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-${{ matrix.platform.target }}

      - name: Cache Rust registry
        uses: Swatinem/rust-cache@v2
        with:
          key: "${{ matrix.platform.target }}"
          cache-targets: "false"

      - uses: actions/setup-python@v5
        with:
          python-version: |
            3.9
            3.10
            3.11
            3.12
          cache: pip

      - name: Install Maturin
        run: |
          pipx install "maturin[zig]"

      - name: Build wheels
        run: maturin build \
          --interpreter=3.9
          --interpreter=3.10
          --interpreter=3.11
          --interpreter=3.12
          --profile=ci
          --target=${{ matrix.platform.target }}
          --out=dist

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

      - name: pytest
        shell: bash
        run: |
          set -e
          pip install pytest pytest-asyncio
          pip install pyvector-rs --find-links dist --force-reinstall
          pytest

  test:
    runs-on: ubuntu-latest
    needs: [ linux ]
    strategy:
      fail-fast: false
      matrix:
        platform:
          - python: "3.9"
          - python: "3.10"
          - python: "3.11"
          - python: "3.12"

    steps:
      - uses: actions/download-artifact@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.platform.python }}"
          cache: pip
      - name: Install deps
        run: |
          pip install pytest pytest-asyncio
      - name: Install wheel
        run: |
          pip install pyvector-rs --find-links dist --force-reinstall
      - name: Run tests
        run: pytest

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    #    if: "startsWith(github.ref, 'refs/tags/')"
    #    needs: [linux, windows, macos, sdist]
    needs: [ linux, macos, sdist, test ]
      #    permissions:
    # IMPORTANT: this permission is mandatory for trusted publishing
    #      id-token: write
    steps:
      - uses: actions/download-artifact@v4
      - run: ls
#      - name: Publish to PyPI
#        uses: PyO3/maturin-action@v1
#        env:
#          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
#        with:
#          command: upload
#          args: --non-interactive --skip-existing wheels-*/*
#      - name: Publish package distributions to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1